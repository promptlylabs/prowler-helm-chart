apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose.yml convert
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: API_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: API_BASE_URL
                  name: env
            - name: AUTH_SECRET
              valueFrom:
                configMapKeyRef:
                  key: AUTH_SECRET
                  name: env
            - name: AUTH_TRUST_HOST
              valueFrom:
                configMapKeyRef:
                  key: AUTH_TRUST_HOST
                  name: env
            - name: AUTH_URL
              valueFrom:
                configMapKeyRef:
                  key: AUTH_URL
                  name: env
            - name: DJANGO_ACCESS_TOKEN_LIFETIME
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_ACCESS_TOKEN_LIFETIME
                  name: env
            - name: DJANGO_ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_ALLOWED_HOSTS
                  name: env
            - name: DJANGO_BIND_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_BIND_ADDRESS
                  name: env
            - name: DJANGO_BROKER_VISIBILITY_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_BROKER_VISIBILITY_TIMEOUT
                  name: env
            - name: DJANGO_CACHE_MAX_AGE
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_CACHE_MAX_AGE
                  name: env
            - name: DJANGO_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_DEBUG
                  name: env
            - name: DJANGO_FINDINGS_BATCH_SIZE
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_FINDINGS_BATCH_SIZE
                  name: env
            - name: DJANGO_LOGGING_FORMATTER
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_LOGGING_FORMATTER
                  name: env
            - name: DJANGO_LOGGING_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_LOGGING_LEVEL
                  name: env
            - name: DJANGO_MANAGE_DB_PARTITIONS
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_MANAGE_DB_PARTITIONS
                  name: env
            - name: DJANGO_OUTPUT_S3_AWS_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_OUTPUT_S3_AWS_ACCESS_KEY_ID
                  name: env
            - name: DJANGO_OUTPUT_S3_AWS_DEFAULT_REGION
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_OUTPUT_S3_AWS_DEFAULT_REGION
                  name: env
            - name: DJANGO_OUTPUT_S3_AWS_OUTPUT_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_OUTPUT_S3_AWS_OUTPUT_BUCKET
                  name: env
            - name: DJANGO_OUTPUT_S3_AWS_SECRET_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_OUTPUT_S3_AWS_SECRET_ACCESS_KEY
                  name: env
            - name: DJANGO_OUTPUT_S3_AWS_SESSION_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_OUTPUT_S3_AWS_SESSION_TOKEN
                  name: env
            - name: DJANGO_PORT
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_PORT
                  name: env
            - name: DJANGO_REFRESH_TOKEN_LIFETIME
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_REFRESH_TOKEN_LIFETIME
                  name: env
            - name: DJANGO_SECRETS_ENCRYPTION_KEY
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_SECRETS_ENCRYPTION_KEY
                  name: env
            - name: DJANGO_SENTRY_DSN
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_SENTRY_DSN
                  name: env
            - name: DJANGO_SETTINGS_MODULE
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_SETTINGS_MODULE
                  name: env
            - name: DJANGO_STALE_WHILE_REVALIDATE
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_STALE_WHILE_REVALIDATE
                  name: env
            - name: DJANGO_TMP_OUTPUT_DIRECTORY
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_TMP_OUTPUT_DIRECTORY
                  name: env
            - name: DJANGO_TOKEN_SIGNING_KEY
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_TOKEN_SIGNING_KEY
                  name: env
            - name: DJANGO_TOKEN_VERIFYING_KEY
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_TOKEN_VERIFYING_KEY
                  name: env
            - name: DJANGO_WORKERS
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_WORKERS
                  name: env
            - name: NEXT_PUBLIC_API_DOCS_URL
              valueFrom:
                configMapKeyRef:
                  key: NEXT_PUBLIC_API_DOCS_URL
                  name: env
            - name: NEXT_PUBLIC_PROWLER_RELEASE_VERSION
              valueFrom:
                configMapKeyRef:
                  key: NEXT_PUBLIC_PROWLER_RELEASE_VERSION
                  name: env
            - name: POSTGRES_ADMIN_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_ADMIN_PASSWORD
                  name: env
            - name: POSTGRES_ADMIN_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_ADMIN_USER
                  name: env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT
                  name: env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env
            - name: PROWLER_API_VERSION
              valueFrom:
                configMapKeyRef:
                  key: PROWLER_API_VERSION
                  name: env
            - name: PROWLER_UI_VERSION
              valueFrom:
                configMapKeyRef:
                  key: PROWLER_UI_VERSION
                  name: env
            - name: SENTRY_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  key: SENTRY_ENVIRONMENT
                  name: env
            - name: SENTRY_RELEASE
              valueFrom:
                configMapKeyRef:
                  key: SENTRY_RELEASE
                  name: env
            - name: SOCIAL_GITHUB_OAUTH_CALLBACK_URL
              valueFrom:
                configMapKeyRef:
                  key: SOCIAL_GITHUB_OAUTH_CALLBACK_URL
                  name: env
            - name: SOCIAL_GITHUB_OAUTH_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: SOCIAL_GITHUB_OAUTH_CLIENT_ID
                  name: env
            - name: SOCIAL_GITHUB_OAUTH_CLIENT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: SOCIAL_GITHUB_OAUTH_CLIENT_SECRET
                  name: env
            - name: SOCIAL_GOOGLE_OAUTH_CALLBACK_URL
              valueFrom:
                configMapKeyRef:
                  key: SOCIAL_GOOGLE_OAUTH_CALLBACK_URL
                  name: env
            - name: SOCIAL_GOOGLE_OAUTH_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: SOCIAL_GOOGLE_OAUTH_CLIENT_ID
                  name: env
            - name: SOCIAL_GOOGLE_OAUTH_CLIENT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: SOCIAL_GOOGLE_OAUTH_CLIENT_SECRET
                  name: env
            - name: UI_PORT
              valueFrom:
                configMapKeyRef:
                  key: UI_PORT
                  name: env
            - name: VALKEY_DB
              valueFrom:
                configMapKeyRef:
                  key: VALKEY_DB
                  name: env
            - name: VALKEY_HOST
              valueFrom:
                configMapKeyRef:
                  key: VALKEY_HOST
                  name: env
            - name: VALKEY_PORT
              valueFrom:
                configMapKeyRef:
                  key: VALKEY_PORT
                  name: env
          image: postgres:16.3-alpine3.20
          livenessProbe:
            exec:
              command:
                - sh -c 'pg_isready -U  -d '
            failureThreshold: 5
            periodSeconds: 5
            timeoutSeconds: 5
          name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-claim0
      hostname: postgres-db
      restartPolicy: Always
      volumes:
        - name: postgres-claim0
          persistentVolumeClaim:
            claimName: postgres-claim0
