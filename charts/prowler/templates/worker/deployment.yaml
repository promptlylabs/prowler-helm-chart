apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prowler.fullname" . }}-worker
  labels:
    {{- include "prowler.labels" . | nindent 4 }}
spec:
  {{- if not .Values.worker.autoscaling.enabled }}
  replicas: {{ .Values.worker.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "prowler.fullname" . }}-worker
  template:
    metadata:
      {{- with .Values.worker.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prowler.labels" . | nindent 8 }}
        app.kubernetes.io/name: {{ include "prowler.fullname" . }}-worker
        {{- with .Values.worker.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.worker.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prowler.worker.serviceAccountName" . }}
      {{- with .Values.worker.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: worker
          {{- with .Values.worker.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          {{- with .Values.api.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.worker.service.port }}
              protocol: TCP
          env:
          - name: POSTGRES_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ ternary .Values.postgresql.global.postgresql.auth.existingSecret .Values.api.postgresql.existingSecret .Values.postgresql.enabled}}
                key: postgres-password
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ ternary .Values.postgresql.global.postgresql.auth.existingSecret .Values.api.postgresql.existingSecret .Values.postgresql.enabled}}
                key: password
          - name: VALKEY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ ternary .Values.valkey.auth.existingSecret .Values.api.valkey.existingSecret .Values.valkey.enabled}}
                key: valkey-password
          envFrom:
            - configMapRef:
                name: {{ include "prowler.fullname" . }}-api
          {{- with .Values.worker.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.worker.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.worker.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.worker.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.worker.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
